syntax = "proto3";
package listah.v1;


option go_package = "cornucopia/listah/internal/pkg/proto/listah/v1";


import "listah/v1/commons.proto";
import "listah/v1/item.proto";
import "google/protobuf/timestamp.proto";
import "gnostic/openapi/v3/annotations.proto";


message CategoryServiceCreateOneRequest {
    string id = 1;
    string name = 2;
    string description = 3;
    string note = 7;
    Audit audit = 50;
    }
message CategoryServiceCreateOneResponse {
    string id = 1;
    string name = 2;
    string description = 3;
    string note = 7;
    Audit audit = 50;
}
message CategoryServiceCreateManyRequest {
    repeated CategoryServiceCreateOneRequest category = 1;
}
message CategoryServiceCreateManyResponse {
    repeated CategoryServiceCreateOneResponse category = 1;
}


message CategoryServiceReadOneRequest {
    string id = 1;
}
message CategoryServiceReadOneResponse {
    string id = 1;
    string name = 2;
    string description = 3;
    string note = 7;
    Audit audit = 50;
}
message CategoryServiceReadManyRequest {
    repeated CategoryServiceReadOneRequest category = 1;
}
message CategoryServiceReadManyResponse {
    repeated CategoryServiceReadOneResponse category = 1;
}


message CategoryServiceUpdateOneRequest {
    string id = 1;
    string name = 2;
    string description = 3;
    string note = 7;
    Audit audit = 50;
}
message CategoryServiceUpdateOneResponse {
    string id = 1;
    string name = 2;
    string description = 3;
    string note = 7;
    Audit audit = 50;
}
message CategoryServiceUpdateManyRequest {
    repeated CategoryServiceUpdateOneRequest category = 1;
}
message CategoryServiceUpdateManyResponse {
    repeated CategoryServiceUpdateOneResponse category = 1;
}


message CategoryServiceDeleteOneRequest {
    string id = 1;
    Audit audit = 50;
}
message CategoryServiceDeleteOneResponse {
    string id = 1;
    string name = 2;
    string description = 3;
    string note = 7;
    Audit audit = 50;
}
message CategoryServiceDeleteManyRequest {
    repeated CategoryServiceDeleteOneRequest category = 1;
}
message CategoryServiceDeleteManyResponse {
    repeated CategoryServiceDeleteOneResponse category = 1;
}


message CategoryServiceListRequest {
    string id = 1;
}
message CategoryServiceListResponse {
    string id = 1;
    string name = 2;
    string description = 3;
    string note = 7;
    repeated string items = 20;
    // repeated ItemServiceReadOneResponse items = 20;
    Audit audit = 50;
}


service CategoryService {
    rpc CreateOne(CategoryServiceCreateOneRequest) returns (CategoryServiceCreateOneResponse){
        option (gnostic.openapi.v3.operation).description = "Create One Category";
    }
    rpc CreateMany(CategoryServiceCreateManyRequest) returns (CategoryServiceCreateManyResponse){
        option (gnostic.openapi.v3.operation).description = "Create Many Categories";
    }
    rpc ReadOne(CategoryServiceReadOneRequest) returns (CategoryServiceReadOneResponse){
        option idempotency_level = NO_SIDE_EFFECTS;
        option (gnostic.openapi.v3.operation).description = "Read One Category";
    }
    rpc ReadMany(CategoryServiceReadManyRequest) returns (CategoryServiceReadManyResponse){
        option idempotency_level=NO_SIDE_EFFECTS;
        option (gnostic.openapi.v3.operation).description = "Read Many Categories";
    }
    rpc UpdateOne(CategoryServiceUpdateOneRequest) returns (CategoryServiceUpdateOneResponse){
        option (gnostic.openapi.v3.operation).description = "Update One Category";
    }
    rpc UpdateMany(CategoryServiceUpdateManyRequest) returns (CategoryServiceUpdateManyResponse){
        option (gnostic.openapi.v3.operation).description = "Update Many Categories";
    }
    rpc DeleteOne(CategoryServiceDeleteOneRequest) returns (CategoryServiceDeleteOneResponse){
        option (gnostic.openapi.v3.operation).description = "Delete One Category";
    }
    rpc DeleteMany(CategoryServiceDeleteManyRequest) returns (CategoryServiceDeleteManyResponse){
        option (gnostic.openapi.v3.operation).description = "Delete Many Categories";
    }
    rpc List(CategoryServiceListRequest) returns (CategoryServiceListResponse){
        option idempotency_level=NO_SIDE_EFFECTS;
        option (gnostic.openapi.v3.operation).description = "List Categories";
    }
}

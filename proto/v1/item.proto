syntax = "proto3";
package listah.v1;


option go_package = "cornucopia/listah/internal/pkg/proto/v1";


import "v1/commons.proto";
import "google/protobuf/timestamp.proto";
import "gnostic/openapi/v3/annotations.proto";




message Item {
  string id = 1;
  string user_id = 2 [json_name = "userId"];
  string summary = 3;
  string category = 4;
  optional string description = 5;
  optional string note = 6;
  repeated string tag = 7;
  map<string,string> properties = 8;
  optional bool soft_delete = 9;
  optional google.protobuf.Timestamp reactivate_at = 21 [json_name = "reactivateAt"];
  optional Audit audit = 50;
}

message ItemServiceCreateRequest {
  repeated Item items = 1;
  optional Audit audit = 50;
}
message ItemServiceCreateResponse {
  repeated string item_ids = 1;
}

message ItemServiceReadRequest {
  repeated string id = 1;
  repeated string user_id = 2 [json_name = "userId"];
  repeated string summary = 3;
  repeated string category = 4;
  repeated string description = 5;
  repeated string note = 6;
  repeated string tag = 7;
  repeated string properties = 8;
  repeated google.protobuf.Timestamp reactivate_at = 50 [json_name = "reactivateAt"];
  repeated google.protobuf.Timestamp created_at  = 100;
  repeated google.protobuf.Timestamp updated_at  = 101;
  repeated google.protobuf.Timestamp deleted_at  = 102;
  repeated string created_by  = 103;
  repeated string updated_by  = 104;
  repeated string deleted_by  = 105;
  optional Pagination pagination = 200;
}
message ItemServiceReadResponse {
  repeated Item items = 1;
  optional Pagination pagination = 200;
  int32 total_record_count = 300;
}

message ItemServiceUpdateRequest {
  repeated Item items = 1;
  optional Audit audit = 100;
}
message ItemServiceUpdateResponse {
  repeated string item_ids = 1;
}

message ItemServiceDeleteRequest {
  repeated Item items = 1;
  optional Audit audit = 100;
}
message ItemServiceDeleteResponse {
  repeated string item_ids = 1;
}



service ItemService {
    rpc Create(ItemServiceCreateRequest) returns (ItemServiceCreateResponse){
        option (gnostic.openapi.v3.operation).description = "Create Item";
    }

    rpc Read(ItemServiceReadRequest) returns (ItemServiceReadResponse){
        option idempotency_level = NO_SIDE_EFFECTS;
        option (gnostic.openapi.v3.operation).description = "Read Item";
    }

    rpc Update(ItemServiceUpdateRequest) returns (ItemServiceUpdateResponse){
        option (gnostic.openapi.v3.operation).description = "Update Item";
    }

    rpc Delete(ItemServiceDeleteRequest) returns (ItemServiceDeleteResponse){
        option (gnostic.openapi.v3.operation).description = "Delete Item";
    }
}
